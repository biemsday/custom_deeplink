
@text-color: #699AB6;
@text-color-highlight: #6B8AFA;
@button-color: #6B8AFA;
@bg: #E8F5FC;

@border-size: 0px;
@border-style: @border-size solid;

@border-higlight: rgba(lighten(@bg, 50%), 0.6);
@border-darklight: rgba(darken(@bg, 15%), 0.5);

@border-button-hl: rgba(lighten(@button-color, 50%), 0.6);
@border-button-dl: rgba(lighten(@button-color, 20%), 0.3);

@border-button-highlighter: @border-button-hl @border-button-dl @border-button-dl @border-button-hl;
@border-card-highlighter: @border-higlight @border-darklight @border-darklight @border-higlight;
@border-input-highlighter: @border-darklight @border-higlight @border-higlight @border-darklight;

@normal-shadow: 6px 6px 10px rgba(darken(@bg, 15%), 0.5), -6px -6px 10px rgba(lighten(@bg, 50%), 0.6);
@pressed-shadow: inset 6px 6px 10px rgba(darken(@bg, 15%), 0.5), inset -6px -6px 10px rgba(lighten(@bg, 50%), 0.6);
@active-shadow: 6px 6px 10px rgba(darken(@bg, 15%), 0.5), -6px -6px 10px rgba(lighten(@bg, 50%), 0.6), inset 6px 6px 10px rgba(darken(@bg, 15%), 0.5), inset -6px -6px 10px rgba(lighten(@bg, 50%), 0.6);

@body-widht: 800px;
@card-width: 650px;
@card-height: 50px;

@button-size: 45px;
@row-size: 30px;
@row-size-margin: (((@button-size + @row-size) / 2) - @row-size) / 2;


body {
    display: flow-root;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    background-color: @bg;
    padding: 1rem;
    color: @text-color;
    margin: 0 auto;
    padding: 0;
    width: @body-widht;
    z-index: 0;
}

input,
button {
    user-select: none;
    outline: none;
}

input,
button,
p,
a {
    font-family: 'Muli';
}

p,
a {
    margin: 0 auto;
    padding: 12px;
    font-size: 15px;
    text-decoration: none;
    font-family: 'Muli';
    font-weight: 400;
    z-index: 1;
}

a {
    color: @text-color-highlight;
}

.box {
    display: grid;
    grid-template-columns: repeat(12, [col] 50px);
    position: relative;
    text-align: center;
    justify-content: center;
    padding: 32px 24px;
    margin: 32px ((@body-widht - (@card-width + (24px * 2)))/2);
    background-color: @bg;
    box-shadow: @normal-shadow;
    border-radius: 20px;
    border: @border-style;
    border-color: @border-card-highlighter;
    z-index: 2;

    .input {
        display: grid;
        grid-row: 1;
        grid-column: col 1 / span 9;
    }
}

.input {
    display: grid;
    grid-row: 1;
    grid-column: col 1 / span 9;
    position: relative;
    text-align: left;
    padding: 12px 8px;
    margin: (@button-size - ((12px * 2) + 10px + @border-size * 2)) / 2;
    border-radius: 10px;
    border: @border-style;
    border-color: @border-input-highlighter;
    background-color: #e3f3fb;
    box-shadow: @pressed-shadow;
    font-size: 10px;
    font-weight: 600;
    color: #6B8AFA;
}

.btn {
    grid-row: 1;
    grid-column: col 11 / span 2;
    position: relative;
    border: @border-style;
    border-color: @border-button-highlighter;
    border-radius: 10px;
    background-color: #6B8AFA;
    color: white;
    box-shadow: 3px 11px 25px rgba(48, 91, 248, 0.6), -6px -6px 10px rgba(255, 255, 255, 0.6), inset -3px -3px 14px rgba(255, 255, 255, 0.2), inset 8px 8px 14px rgba(48, 91, 248, 0.5);
    font-size: 15px;
    font-weight: 600;

    &:hover {
        background-color: darken(@text-color-highlight, 5%);
    }

    &:active {
        box-shadow: 3px 11px 25px rgba(darken(@text-color-highlight, 20%), 0.6), -6px -6px 10px rgba(lighten(@text-color-highlight, 30%), 0.9), inset 3px 11px 15px rgba(darken(@text-color-highlight, 20%), 0.5), inset -6px -6px 8px rgba(lighten(@text-color-highlight, 20%), 0.5);
    }

}

.notify {
    display: grid;
    grid-template-columns: repeat(12, [col] 50px);
    position: relative;
    text-align: center;
    justify-content: center;
    min-height: 50px;
    padding: 32px/2 24px;
    margin: 32px ((@body-widht - (@card-width + (24px * 2)))/2);
    background-color: @bg;
    box-shadow: @normal-shadow;
    border-radius: 15px;
    border: @border-style;
    border-color: @border-card-highlighter;
    z-index: 1;

    p {
        display: grid;
        grid-row: 1;
        grid-column: col 1 / span 3;
    }

    .error {
        grid-column: col 1 / span 12;
    }

    .input {
        grid-column: col 4 / span 6;
    }
}